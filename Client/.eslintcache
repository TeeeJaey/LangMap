[{"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\index.js":"1","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\reducer.js":"2","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\Actions.js":"3","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Utilities.js":"4","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Constants.js":"5","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Main.component.jsx":"6","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Header.component.jsx":"7","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\store.js":"8","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\LanguageSelector.component.jsx":"9","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\services\\LangService.js":"10","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\services\\ApiService.js":"11"},{"size":374,"mtime":1631956179251,"results":"12","hashOfConfig":"13"},{"size":961,"mtime":1631956044482,"results":"14","hashOfConfig":"13"},{"size":239,"mtime":1631956152626,"results":"15","hashOfConfig":"13"},{"size":537,"mtime":1631949761989,"results":"16","hashOfConfig":"13"},{"size":8818,"mtime":1631949747238,"results":"17","hashOfConfig":"13"},{"size":496,"mtime":1629634820545,"results":"18","hashOfConfig":"13"},{"size":930,"mtime":1631951391839,"results":"19","hashOfConfig":"13"},{"size":137,"mtime":1629630203326,"results":"20","hashOfConfig":"13"},{"size":3289,"mtime":1631956022922,"results":"21","hashOfConfig":"13"},{"size":544,"mtime":1631949983845,"results":"22","hashOfConfig":"13"},{"size":2557,"mtime":1631949210227,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vwwsdm",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":5,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\index.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\reducer.js",["52","53"],"\r\nimport Constants from \"../Utils/Constants\";\r\nimport LangService from \"../services/LangService\";\r\n\r\nlet lastId = 0;\r\nconst defaultState = {selectedLang:{}, LangMapList:[]};\r\n\r\nexport default function reducer(state = defaultState, action) \r\n{\r\n    let service = new LangService();\r\n    switch(action.type) \r\n    {\r\n        case Constants.Actions.SetSelectedLang: {\r\n            let newCode = action.payload.code;\r\n            let oldCode = state.selectedLang.code;\r\n            if(newCode !== oldCode) {\r\n                let newState = {...state};\r\n                service.setSelectedLang().then( response => {\r\n                    newState.selectedLang = {...action.payload};\r\n                    newState.LangMapList = [...response.LangMapList];\r\n                    return newState;\r\n                });\r\n            }\r\n            else\r\n                return state;\r\n        }\r\n        \r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n",["54","55"],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\Actions.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Utilities.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Constants.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Main.component.jsx",["56"],"\r\nimport React, { Component } from 'react';\r\nimport { withResizeDetector } from 'react-resize-detector';\r\nimport Swal from 'sweetalert2'\r\nimport Header from './Header.component'\r\n\r\nclass MainComponent extends Component \r\n{\r\n    render() \r\n    { \r\n\t\treturn <div>\r\n                <Header/>\r\n            </div>;\r\n    }\r\n\r\n}\r\n\r\nconst AdaptiveWithDetector = withResizeDetector(MainComponent);\r\nconst Main = () => {\r\n    return (\r\n        <AdaptiveWithDetector />\r\n    );\r\n};\r\n  \r\nexport default Main;","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Header.component.jsx",["57","58","59","60"],"\r\nimport LanguageSelector from './LanguageSelector.component';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nfunction selectLang(key,val) {\r\n    return;\r\n}\r\n\r\nfunction Header() {\r\n\r\n    const inputStyle = {\r\n    };\r\n    let dropdownData = {label:\"Language\", list:[\"Spa\",\"Hin\",\"Fra\",\"Jap\"]};\r\n    return <div className=\"mainHeader\" >\r\n            <span className=\"heading-label\">LangMap</span>\r\n            <button className=\"btn btn-primary\" type=\"button\" style={{minWidth:'150px', marginBottom:\"5px\", marginRight:\"5px\"}} >\r\n                Search a word\r\n            </button>\r\n            \r\n            <button className=\"btn btn-primary\" type=\"button\" style={{minWidth:'150px', marginBottom:\"5px\", marginRight:\"5px\"}}  >\r\n                Use google Translate\r\n            </button>\r\n\r\n            <LanguageSelector style={{minWidth:'150px', marginBottom:\"5px\", marginRight:\"5px\"}} />\r\n    </div>;\r\n}\r\n\r\nexport default Header;","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\store.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\LanguageSelector.component.jsx",["61","62","63","64","65","66","67","68"],"\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport Flags from 'country-flag-icons/react/3x2';\r\nimport { hasFlag } from 'country-flag-icons'\r\nimport Constants from '../Utils/Constants'\r\n\r\nimport Actions from \"../Store/Actions\";\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\n\r\nfunction LanguageSelector(props) {\r\n    const [showDropdown, setShowDropdown] = useState(\"none\");\r\n    const [langList, setLangList] = useState(Constants.LanguageCodes);\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const dispatch = useDispatch();\r\n    const selectedLang = useSelector(state => state.selectedLang);\r\n\r\n    const toggleDropdown = function() {\r\n        searchChange(\"\");\r\n        if(showDropdown == \"none\") setShowDropdown(\"block\");\r\n        else setShowDropdown(\"none\");\r\n    };\r\n\r\n    const langChange = function(lang) {\r\n        const req = {langCode:lang.code};\r\n        service.setSelectedLang(req).then(response => {\r\n            newState.selectedLang = {...action.payload};\r\n            newState.LangMapList = [...response.LangMapList];\r\n            dispatch(Actions.SetSelectedLang(lang));\r\n            return newState;\r\n        });\r\n        toggleDropdown();\r\n    };\r\n\r\n    const searchChange = function(str) {\r\n        setSearch(str);\r\n        setLangList([...Constants.LanguageCodes.filter(x => x.desc.toUpperCase().includes(str.toUpperCase()))]);\r\n    };\r\n\r\n    let flagImage = null;\r\n    let languageDesc = \"Select Language\";\r\n    if(selectedLang && selectedLang.code) {\r\n        const country = selectedLang.code.split('-')[1];\r\n        if(hasFlag(country)) {\r\n            const FlagComponent = Flags[country];\r\n            flagImage = <FlagComponent title={country} style={{ width: '25px'}} />\r\n        }\r\n        languageDesc = selectedLang.desc.split('(')[0];\r\n    }\r\n    \r\n    let langListRender = [];\r\n    langListRender.push(<input type=\"text\" value={search} onChange={e => searchChange(e.target.value)} style={{width:\"90%\",margin:'5px'}} />);\r\n\r\n    langList.forEach(obj => {\r\n        const country = obj.code.split('-')[1];\r\n        let selected = \"\";\r\n        if(hasFlag(country)) {\r\n            if(selectedLang && selectedLang.code && obj.code === selectedLang.code)\r\n                selected = \"selected\";\r\n\r\n            const ObjFlagComponent = Flags[country];\r\n            langListRender.push(<a key={obj.code} className={\"dropdown-item language-selector-item \" + selected} onClick={()=>langChange(obj)}  > \r\n                                    <ObjFlagComponent title={obj.code} className=\"flagIcon\" />  \r\n                                    <span className=\"ellipsis\"> {obj.desc} </span> \r\n                                </a>);\r\n        }\r\n    });\r\n\r\n    return <div className=\"dropdown\" style={{marginRight:\"5px\"}} > \r\n                <button className=\"btn btn-success dropdown-toggle language-selector-btn\" type=\"button\" onClick={toggleDropdown} >\r\n                    {flagImage} <span className=\"langDesc\" > {languageDesc} </span>\r\n                </button>\r\n                <div className=\"dropdown-menu dropdown-menu-right language-selector-container\" style={{display: showDropdown}} >\r\n                    {langListRender}\r\n                </div>\r\n            </div>;\r\n}\r\n\r\nexport default LanguageSelector;","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\services\\LangService.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\services\\ApiService.js",["69","70"],"\r\nimport Constants from '../Utils/Constants';\r\nimport axios from 'axios';\r\n\r\nexport default class ApiService\r\n{\r\n    constructor(reqMethod,reqUrl,reqObj) {\r\n        this.reqMethod = reqMethod;\r\n        this.reqUrl = reqUrl;\r\n        this.reqObj = reqObj;\r\n    }\r\n\r\n    getResponse() {\r\n        const reqUrl = this.reqUrl;\r\n        const reqObj = this.reqObj;\r\n\r\n        switch(this.reqMethod) {\r\n            case \"GET\": { \r\n                return new Promise( function(resolve,reject) {\r\n                    axios.get(reqUrl, reqObj)\r\n                        .then(res => {\r\n                            window.serverData = res.data;\r\n                            resolve(window.serverData);\r\n                        })\r\n                        .catch(err => {\r\n                            if(err.response && err.response.data)\r\n                                window.serverData = err.response.data;\r\n                            else\r\n                            {\r\n                                window.serverData = {\r\n                                    data:\r\n                                    {\r\n                                        isOffline:true,\r\n                                        errorMsg:\"Server is Unreachable!\"\r\n                                    }\r\n                                };\r\n                            }\r\n                            resolve(window.serverData);\r\n                    });\r\n                });\r\n            }\r\n\r\n            case \"POST\": { \r\n                return new Promise( function(resolve,reject) {\r\n                    axios.post(reqUrl, reqObj)\r\n                        .then(res => {\r\n                            window.serverData = res.data;\r\n                            resolve(window.serverData);\r\n                        })\r\n                        .catch(err => {\r\n                            if(err.response && err.response.data)\r\n                                window.serverData = err.response.data;\r\n                            else\r\n                            {\r\n                                window.serverData = {\r\n                                    data:\r\n                                    {\r\n                                        isOffline:true,\r\n                                        errorMsg:\"Server is Unreachable!\"\r\n                                    }\r\n                                };\r\n                            }\r\n                            resolve(window.serverData);\r\n                        });\r\n                });\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n",{"ruleId":"71","severity":1,"message":"72","line":5,"column":5,"nodeType":"73","messageId":"74","endLine":5,"endColumn":11},{"ruleId":"75","severity":1,"message":"76","line":28,"column":9,"nodeType":"77","messageId":"78","endLine":30,"endColumn":10},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"71","severity":1,"message":"83","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":12},{"ruleId":"71","severity":1,"message":"84","line":3,"column":17,"nodeType":"73","messageId":"74","endLine":3,"endColumn":26},{"ruleId":"71","severity":1,"message":"85","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":20},{"ruleId":"71","severity":1,"message":"86","line":12,"column":11,"nodeType":"73","messageId":"74","endLine":12,"endColumn":21},{"ruleId":"71","severity":1,"message":"87","line":14,"column":9,"nodeType":"73","messageId":"74","endLine":14,"endColumn":21},{"ruleId":"71","severity":1,"message":"88","line":9,"column":36,"nodeType":"73","messageId":"74","endLine":9,"endColumn":44},{"ruleId":"89","severity":1,"message":"90","line":21,"column":25,"nodeType":"91","messageId":"92","endLine":21,"endColumn":27},{"ruleId":"93","severity":2,"message":"94","line":27,"column":9,"nodeType":"73","messageId":"95","endLine":27,"endColumn":16},{"ruleId":"93","severity":2,"message":"96","line":28,"column":13,"nodeType":"73","messageId":"95","endLine":28,"endColumn":21},{"ruleId":"93","severity":2,"message":"97","line":28,"column":41,"nodeType":"73","messageId":"95","endLine":28,"endColumn":47},{"ruleId":"93","severity":2,"message":"96","line":29,"column":13,"nodeType":"73","messageId":"95","endLine":29,"endColumn":21},{"ruleId":"93","severity":2,"message":"96","line":31,"column":20,"nodeType":"73","messageId":"95","endLine":31,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":63,"column":33,"nodeType":"100","endLine":63,"endColumn":146},{"ruleId":"71","severity":1,"message":"101","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":17,"column":9,"nodeType":"104","messageId":"105","endLine":67,"endColumn":10},"no-unused-vars","'lastId' is assigned a value but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'Swal' is defined but never used.","'Component' is defined but never used.","'selectLang' is defined but never used.","'inputStyle' is assigned a value but never used.","'dropdownData' is assigned a value but never used.","'useStore' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-undef","'service' is not defined.","undef","'newState' is not defined.","'action' is not defined.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Constants' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]