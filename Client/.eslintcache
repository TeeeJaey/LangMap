[{"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\index.js":"1","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\reducer.js":"2","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\Actions.js":"3","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Utilities.js":"4","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Constants.js":"5","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Main.component.jsx":"6","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Header.component.jsx":"7","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\store.js":"8","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\LanguageSelector.component.jsx":"9"},{"size":378,"mtime":1629633302614,"results":"10","hashOfConfig":"11"},{"size":699,"mtime":1629631270796,"results":"12","hashOfConfig":"11"},{"size":74,"mtime":1629630251954,"results":"13","hashOfConfig":"11"},{"size":544,"mtime":1629630287518,"results":"14","hashOfConfig":"11"},{"size":9436,"mtime":1629641640901,"results":"15","hashOfConfig":"11"},{"size":496,"mtime":1629634820545,"results":"16","hashOfConfig":"11"},{"size":926,"mtime":1631948442502,"results":"17","hashOfConfig":"11"},{"size":137,"mtime":1629630203326,"results":"18","hashOfConfig":"11"},{"size":2842,"mtime":1629645088097,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vwwsdm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\index.js",[],["43","44"],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\reducer.js",["45","46","47","48"],"\r\nimport Constants from \"../Utils/Constants\";\r\nimport Utilities from \"../Utils/Utilities\";\r\nimport Actions from \"../Store/Actions\";\r\n\r\nlet lastId = 0;\r\nconst defaultState = {tasks:[], openTasks:[], shownTaskId:-1};\r\n\r\nfunction reducer(state = defaultState, action) \r\n{\r\n    switch(action.type) \r\n    {\r\n        case Constants.TaskAction.ToggleForm: {\r\n            let newState = {...state};\r\n            newState.taskForm = action.payload.taskForm;\r\n            newState.openTasks = newState.tasks.filter(x => x.status != Constants.TaskStatus.DONE);\r\n            return newState;\r\n        }\r\n        \r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\Actions.js",["49","50"],"\r\nimport Constants from \"../Utils/Constants\";\r\n\r\nclass Actions\r\n{\r\n    \r\n}","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Utilities.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Utils\\Constants.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Main.component.jsx",["51"],"\r\nimport React, { Component } from 'react';\r\nimport { withResizeDetector } from 'react-resize-detector';\r\nimport Swal from 'sweetalert2'\r\nimport Header from './Header.component'\r\n\r\nclass MainComponent extends Component \r\n{\r\n    render() \r\n    { \r\n\t\treturn <div>\r\n                <Header/>\r\n            </div>;\r\n    }\r\n\r\n}\r\n\r\nconst AdaptiveWithDetector = withResizeDetector(MainComponent);\r\nconst Main = () => {\r\n    return (\r\n        <AdaptiveWithDetector />\r\n    );\r\n};\r\n  \r\nexport default Main;","D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\Header.component.jsx",["52","53","54","55"],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\Store\\store.js",[],"D:\\My Stuff\\Work\\Project repositories\\LangMap\\Client\\src\\components\\LanguageSelector.component.jsx",["56","57"],"\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport Flags from 'country-flag-icons/react/3x2';\r\nimport { hasFlag } from 'country-flag-icons'\r\nimport Constants from '../Utils/Constants'\r\n\r\n\r\nfunction LanguageSelector(props) {\r\n    const [showDropdown, setShowDropdown] = useState(\"none\");\r\n    const [langList, setLangList] = useState(Constants.LanguageCodes);\r\n    const [selectedLanguage, setSelectedLanguage] = useState({});\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const toggleDropdown = function() {\r\n        searchChange(\"\");\r\n        if(showDropdown == \"none\") setShowDropdown(\"block\");\r\n        else setShowDropdown(\"none\");\r\n    };\r\n\r\n    const langChange = function(lang) {\r\n        setSelectedLanguage(lang);\r\n        toggleDropdown();\r\n    };\r\n\r\n    const searchChange = function(str) {\r\n        setSearch(str);\r\n        setLangList([...Constants.LanguageCodes.filter(x => x.desc.toUpperCase().includes(str.toUpperCase()))]);\r\n    };\r\n\r\n    let flagImage = null;\r\n    let languageDesc = \"Select Language\";\r\n    if(selectedLanguage && selectedLanguage.code) {\r\n        const country = selectedLanguage.code.split('-')[1];\r\n        if(hasFlag(country)) {\r\n            const FlagComponent = Flags[country];\r\n            flagImage = <FlagComponent title={country} style={{ width: '25px'}} />\r\n        }\r\n        languageDesc = selectedLanguage.desc.split('(')[0];\r\n    }\r\n    \r\n    let langListRender = [];\r\n    langListRender.push(<input type=\"text\" value={search} onChange={e => searchChange(e.target.value)} style={{width:\"90%\",margin:'5px'}} />);\r\n\r\n    langList.forEach(obj => {\r\n        const country = obj.code.split('-')[1];\r\n        let selected = \"\";\r\n        if(hasFlag(country)) {\r\n            if(obj.code === selectedLanguage.code)\r\n                selected = \"selected\";\r\n\r\n            const ObjFlagComponent = Flags[country];\r\n            langListRender.push(<a key={obj.code} className={\"dropdown-item language-selector-item \" + selected} onClick={()=>langChange(obj)}  > \r\n                                    <ObjFlagComponent title={obj.code} className=\"flagIcon\" />  \r\n                                    <span className=\"ellipsis\"> {obj.desc} </span> \r\n                                </a>);\r\n        }\r\n    });\r\n\r\n    return <div className=\"dropdown\" style={{marginRight:\"5px\"}} > \r\n                <button className=\"btn btn-success dropdown-toggle language-selector-btn\" type=\"button\" onClick={toggleDropdown} >\r\n                    {flagImage} <span className=\"langDesc\" > {languageDesc} </span>\r\n                </button>\r\n                <div className=\"dropdown-menu dropdown-menu-right language-selector-container\" style={{display: showDropdown}} >\r\n                    {langListRender}\r\n                </div>\r\n            </div>;\r\n}\r\n\r\nexport default LanguageSelector;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":6,"column":5,"nodeType":"64","messageId":"65","endLine":6,"endColumn":11},{"ruleId":"68","severity":1,"message":"69","line":16,"column":70,"nodeType":"70","messageId":"71","endLine":16,"endColumn":72},{"ruleId":"62","severity":1,"message":"72","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":4,"column":7,"nodeType":"64","messageId":"65","endLine":4,"endColumn":14},{"ruleId":"62","severity":1,"message":"73","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":12},{"ruleId":"62","severity":1,"message":"74","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"62","severity":1,"message":"75","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":20},{"ruleId":"62","severity":1,"message":"76","line":12,"column":11,"nodeType":"64","messageId":"65","endLine":12,"endColumn":21},{"ruleId":"62","severity":1,"message":"77","line":14,"column":9,"nodeType":"64","messageId":"65","endLine":14,"endColumn":21},{"ruleId":"68","severity":1,"message":"78","line":17,"column":25,"nodeType":"70","messageId":"71","endLine":17,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":53,"column":33,"nodeType":"81","endLine":53,"endColumn":146},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Utilities' is defined but never used.","Identifier","unusedVar","'Actions' is defined but never used.","'lastId' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Constants' is defined but never used.","'Swal' is defined but never used.","'Component' is defined but never used.","'selectLang' is defined but never used.","'inputStyle' is assigned a value but never used.","'dropdownData' is assigned a value but never used.","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]